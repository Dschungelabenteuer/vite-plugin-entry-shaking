@mixin contained {
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

@mixin reset-list {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin padding($block: var(--spacing-sm), $inline: var(--spacing-md)) {
  padding: $block $inline;
}

@mixin border-top($color: var(--overall-border-color), $width: 1px) {
  box-shadow: 0 #{'-' + $width} 0 0 $color;
}

@mixin border-bottom($color: var(--overall-border-color), $width: 1px) {
  box-shadow: 0 $width 0 0 $color;
}

@mixin border-left($color: var(--overall-border-color), $width: 1px) {
  box-shadow: #{'-' + $width} 0 0 0 $color;
}

@mixin border-right($color: var(--overall-border-color), $width: 1px) {
  box-shadow: $width 0 0 0 $color;
}

@mixin flex-row($justify-content: center, $align-items: center) {
  @include flex($justify-content, $align-items, row);
}

@mixin flex-col($justify-content: center, $align-items: center) {
  @include flex($justify-content, $align-items, column);
}

@mixin flex($justify-content: center, $align-items: center, $flex-direction: row) {
  display: flex;
  flex-direction: $flex-direction;
  align-items: $align-items;
  justify-content: $justify-content;
}

@mixin button {
  @include flex;

  height: var(--button-height, auto);
  color: var(--text-color);
  text-decoration: none;
  cursor: pointer;
  background: transparent;
  border: 0;
  border-radius: calc(var(--radius-md) + 6px);

  &:disabled {
    cursor: not-allowed;
    opacity: 0.4;
  }

  &:hover,
  &:focus,
  &:active {
    color: var(--text-emphasize-color);
  }

  &:focus {
    outline: 0;
    box-shadow:
      inset 0 0 0 1px var(--button-outline-color),
      inset 0 0 0 4px var(--background-color),
      inset 0 0 0 6px var(--accent-color);
  }

  &.bordered {
    transition: ease var(--transition-duration-short);

    &:not(:focus) {
      box-shadow:
        inset 0 0 0 1px var(--button-outline-color),
        inset 0 0 0 0 transparent,
        inset 0 0 0 0 transparent;
    }

    &:hover {
      box-shadow:
        inset 0 0 0 1px var(--button-outline-color-hover),
        inset 0 0 0 0 transparent,
        inset 0 0 0 0 transparent;
    }
  }

  svg {
    margin-inline-end: var(--spacing-md);
  }

  .kbd {
    margin-inline-start: var(--spacing-md);
  }

  &.icon-only {
    svg {
      margin-inline-end: 0;
    }
  }

  &.small {
    @include button-small;
  }

  &.medium {
    @include button-medium;
  }

  &.large {
    @include button-large;
  }

  .shortcut {
    margin-inline: var(--spacing-md) 0;
  }
}

@mixin button-small {
  padding: calc(var(--spacing-sm) + 3px);

  &:not(.icon-only) {
    svg {
      margin-inline-end: var(--spacing-sm);
    }
  }
}

@mixin button-medium {
  padding: calc(var(--spacing-md) + 3px);
}

@mixin button-large {
  padding: var(--spacing-lg);
}

@mixin color-scheme($scheme: 'any') {
  @if $scheme == 'any' {
    [data-color-scheme],
    [data-color-scheme] *::backdrop {
      @content;
    }
  } @else {
    [data-color-scheme='#{$scheme}'],
    [data-color-scheme='#{$scheme}'] *::backdrop {
      @content;
    }
  }
}

@mixin token() {
  :root,
  *::backdrop {
    @content;
  }
}
